
trying.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001a6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000021a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000092  00800060  00800060  0000021a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000021a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000024c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000288  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007b1  00000000  00000000  000002b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005d7  00000000  00000000  00000a69  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005a9  00000000  00000000  00001040  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000044  00000000  00000000  000015ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000eae1  00000000  00000000  00001630  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000b4  00000000  00000000  00010111  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  000101c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000002d0  00000000  00000000  000101e5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	29 c0       	rjmp	.+82     	; 0x54 <__ctors_end>
   2:	00 00       	nop
   4:	42 c0       	rjmp	.+132    	; 0x8a <__bad_interrupt>
   6:	00 00       	nop
   8:	40 c0       	rjmp	.+128    	; 0x8a <__bad_interrupt>
   a:	00 00       	nop
   c:	3e c0       	rjmp	.+124    	; 0x8a <__bad_interrupt>
   e:	00 00       	nop
  10:	3c c0       	rjmp	.+120    	; 0x8a <__bad_interrupt>
  12:	00 00       	nop
  14:	3a c0       	rjmp	.+116    	; 0x8a <__bad_interrupt>
  16:	00 00       	nop
  18:	38 c0       	rjmp	.+112    	; 0x8a <__bad_interrupt>
  1a:	00 00       	nop
  1c:	36 c0       	rjmp	.+108    	; 0x8a <__bad_interrupt>
  1e:	00 00       	nop
  20:	34 c0       	rjmp	.+104    	; 0x8a <__bad_interrupt>
  22:	00 00       	nop
  24:	32 c0       	rjmp	.+100    	; 0x8a <__bad_interrupt>
  26:	00 00       	nop
  28:	30 c0       	rjmp	.+96     	; 0x8a <__bad_interrupt>
  2a:	00 00       	nop
  2c:	2e c0       	rjmp	.+92     	; 0x8a <__bad_interrupt>
  2e:	00 00       	nop
  30:	2c c0       	rjmp	.+88     	; 0x8a <__bad_interrupt>
  32:	00 00       	nop
  34:	2a c0       	rjmp	.+84     	; 0x8a <__bad_interrupt>
  36:	00 00       	nop
  38:	28 c0       	rjmp	.+80     	; 0x8a <__bad_interrupt>
  3a:	00 00       	nop
  3c:	26 c0       	rjmp	.+76     	; 0x8a <__bad_interrupt>
  3e:	00 00       	nop
  40:	24 c0       	rjmp	.+72     	; 0x8a <__bad_interrupt>
  42:	00 00       	nop
  44:	22 c0       	rjmp	.+68     	; 0x8a <__bad_interrupt>
  46:	00 00       	nop
  48:	20 c0       	rjmp	.+64     	; 0x8a <__bad_interrupt>
  4a:	00 00       	nop
  4c:	1e c0       	rjmp	.+60     	; 0x8a <__bad_interrupt>
  4e:	00 00       	nop
  50:	1c c0       	rjmp	.+56     	; 0x8a <__bad_interrupt>
	...

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ea       	ldi	r30, 0xA6	; 166
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 3f       	cpi	r26, 0xF2	; 242
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	73 d0       	rcall	.+230    	; 0x16e <main>
  88:	8c c0       	rjmp	.+280    	; 0x1a2 <_exit>

0000008a <__bad_interrupt>:
  8a:	ba cf       	rjmp	.-140    	; 0x0 <__vectors>

0000008c <printer>:





void printer(void){
  8c:	e0 ee       	ldi	r30, 0xE0	; 224
  8e:	f0 e0       	ldi	r31, 0x00	; 0
  90:	80 e0       	ldi	r24, 0x00	; 0
	
	
		
		for (int i=0;i<8;i++)
		{
			PORTD =i;
  92:	82 bb       	out	0x12, r24	; 18
			PORTC = box[i];
  94:	90 81       	ld	r25, Z
  96:	32 96       	adiw	r30, 0x02	; 2
  98:	95 bb       	out	0x15, r25	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9a:	a3 ed       	ldi	r26, 0xD3	; 211
  9c:	b0 e3       	ldi	r27, 0x30	; 48
  9e:	11 97       	sbiw	r26, 0x01	; 1
  a0:	f1 f7       	brne	.-4      	; 0x9e <printer+0x12>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <printer+0x18>
  a4:	00 00       	nop
  a6:	8f 5f       	subi	r24, 0xFF	; 255

void printer(void){
	
	
		
		for (int i=0;i<8;i++)
  a8:	88 30       	cpi	r24, 0x08	; 8
  aa:	99 f7       	brne	.-26     	; 0x92 <printer+0x6>
  ac:	83 ed       	ldi	r24, 0xD3	; 211
  ae:	90 e3       	ldi	r25, 0x30	; 48
  b0:	01 97       	sbiw	r24, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <printer+0x24>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <printer+0x2a>
  b6:	00 00       	nop
  b8:	08 95       	ret

000000ba <data>:
	
	

void data(void){
	
	variabl2=0b00000001;
  ba:	81 e0       	ldi	r24, 0x01	; 1
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	90 93 f1 00 	sts	0x00F1, r25	; 0x8000f1 <variabl2+0x1>
  c2:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <variabl2>
  c6:	e0 e6       	ldi	r30, 0x60	; 96
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	a0 ee       	ldi	r26, 0xE0	; 224
  cc:	b0 e0       	ldi	r27, 0x00	; 0
  ce:	40 ee       	ldi	r20, 0xE0	; 224
  d0:	50 e0       	ldi	r21, 0x00	; 0
	for (int i=0;i<8;i++)
	{
		box[i]=x[i][0]+2*x[i][1]+4*x[i][2]+8*x[i][3]+16*x[i][4]+32*x[i][5]+64*x[i][6]+128*x[i][7];
  d2:	82 81       	ldd	r24, Z+2	; 0x02
  d4:	93 81       	ldd	r25, Z+3	; 0x03
  d6:	88 0f       	add	r24, r24
  d8:	99 1f       	adc	r25, r25
  da:	20 81       	ld	r18, Z
  dc:	31 81       	ldd	r19, Z+1	; 0x01
  de:	82 0f       	add	r24, r18
  e0:	93 1f       	adc	r25, r19
  e2:	24 81       	ldd	r18, Z+4	; 0x04
  e4:	35 81       	ldd	r19, Z+5	; 0x05
  e6:	22 0f       	add	r18, r18
  e8:	33 1f       	adc	r19, r19
  ea:	22 0f       	add	r18, r18
  ec:	33 1f       	adc	r19, r19
  ee:	82 0f       	add	r24, r18
  f0:	93 1f       	adc	r25, r19
  f2:	26 81       	ldd	r18, Z+6	; 0x06
  f4:	37 81       	ldd	r19, Z+7	; 0x07
  f6:	22 0f       	add	r18, r18
  f8:	33 1f       	adc	r19, r19
  fa:	22 0f       	add	r18, r18
  fc:	33 1f       	adc	r19, r19
  fe:	22 0f       	add	r18, r18
 100:	33 1f       	adc	r19, r19
 102:	82 0f       	add	r24, r18
 104:	93 1f       	adc	r25, r19
 106:	20 85       	ldd	r18, Z+8	; 0x08
 108:	31 85       	ldd	r19, Z+9	; 0x09
 10a:	22 95       	swap	r18
 10c:	32 95       	swap	r19
 10e:	30 7f       	andi	r19, 0xF0	; 240
 110:	32 27       	eor	r19, r18
 112:	20 7f       	andi	r18, 0xF0	; 240
 114:	32 27       	eor	r19, r18
 116:	82 0f       	add	r24, r18
 118:	93 1f       	adc	r25, r19
 11a:	22 85       	ldd	r18, Z+10	; 0x0a
 11c:	33 85       	ldd	r19, Z+11	; 0x0b
 11e:	22 0f       	add	r18, r18
 120:	33 1f       	adc	r19, r19
 122:	22 95       	swap	r18
 124:	32 95       	swap	r19
 126:	30 7f       	andi	r19, 0xF0	; 240
 128:	32 27       	eor	r19, r18
 12a:	20 7f       	andi	r18, 0xF0	; 240
 12c:	32 27       	eor	r19, r18
 12e:	82 0f       	add	r24, r18
 130:	93 1f       	adc	r25, r19
 132:	24 85       	ldd	r18, Z+12	; 0x0c
 134:	35 85       	ldd	r19, Z+13	; 0x0d
 136:	00 24       	eor	r0, r0
 138:	36 95       	lsr	r19
 13a:	27 95       	ror	r18
 13c:	07 94       	ror	r0
 13e:	36 95       	lsr	r19
 140:	27 95       	ror	r18
 142:	07 94       	ror	r0
 144:	32 2f       	mov	r19, r18
 146:	20 2d       	mov	r18, r0
 148:	82 0f       	add	r24, r18
 14a:	93 1f       	adc	r25, r19
 14c:	26 85       	ldd	r18, Z+14	; 0x0e
 14e:	37 85       	ldd	r19, Z+15	; 0x0f
 150:	36 95       	lsr	r19
 152:	32 2f       	mov	r19, r18
 154:	22 27       	eor	r18, r18
 156:	37 95       	ror	r19
 158:	27 95       	ror	r18
 15a:	82 0f       	add	r24, r18
 15c:	93 1f       	adc	r25, r19
 15e:	8d 93       	st	X+, r24
 160:	9d 93       	st	X+, r25
 162:	70 96       	adiw	r30, 0x10	; 16
	

void data(void){
	
	variabl2=0b00000001;
	for (int i=0;i<8;i++)
 164:	e4 17       	cp	r30, r20
 166:	f5 07       	cpc	r31, r21
 168:	09 f0       	breq	.+2      	; 0x16c <data+0xb2>
 16a:	b3 cf       	rjmp	.-154    	; 0xd2 <data+0x18>
		box[i]=x[i][0]+2*x[i][1]+4*x[i][2]+8*x[i][3]+16*x[i][4]+32*x[i][5]+64*x[i][6]+128*x[i][7];
		
	}
	
	
}
 16c:	08 95       	ret

0000016e <main>:
void printer(void);


int main (void)
{
	PORTA = 0xFF;
 16e:	8f ef       	ldi	r24, 0xFF	; 255
 170:	8b bb       	out	0x1b, r24	; 27
	DDRA = 0;
 172:	1a ba       	out	0x1a, r1	; 26
	PORTB = 0xFF;
 174:	88 bb       	out	0x18, r24	; 24
	DDRB = 0;
 176:	17 ba       	out	0x17, r1	; 23
	DDRC = 0xFF;
 178:	84 bb       	out	0x14, r24	; 20
	PORTC = 0;
 17a:	15 ba       	out	0x15, r1	; 21
	DDRD = 0xFF;
 17c:	81 bb       	out	0x11, r24	; 17
	PORTD = 0;
 17e:	12 ba       	out	0x12, r1	; 18
	
	x[0][0]=1;
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_end+0x1>
 188:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_end>
	x[7][7]=1;
 18c:	90 93 df 00 	sts	0x00DF, r25	; 0x8000df <__data_end+0x7f>
 190:	80 93 de 00 	sts	0x00DE, r24	; 0x8000de <__data_end+0x7e>
	x[5][5]=1;
 194:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__data_end+0x5b>
 198:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__data_end+0x5a>
	while(1){
		data();
		printer();
 19c:	8e df       	rcall	.-228    	; 0xba <data>
 19e:	76 df       	rcall	.-276    	; 0x8c <printer>
 1a0:	fd cf       	rjmp	.-6      	; 0x19c <main+0x2e>

000001a2 <_exit>:
 1a2:	f8 94       	cli

000001a4 <__stop_program>:
 1a4:	ff cf       	rjmp	.-2      	; 0x1a4 <__stop_program>
